【8】解释器模式
https://www.cnblogs.com/zhou-yi/p/5462663.html

1，what
解释器模式（Interpreter）
给定一个语言，定义它的文法的一种表示，并定义一个解释器，
。这个解释器使用该表示来解释语言中的句子

Expression：抽象表达式，声明一个所有的具体表达式都需要实现的抽象接口；这个接口主要是一个interpret()方法，称做解释操作。

Terminal Expression：终结符表达式，实现了抽象表达式所要求的接口；文法中的每一个终结符都有一个具体终结表达式与之相对应。比如公式R=R1+R2，R1和R2就是终结符，对应的解析R1和R2的解释器就是终结符表达式。

Nonterminal Expression：非终结符表达式，文法中的每一条规则都需要一个具体的非终结符表达式，非终结符表达式一般是文法中的运算符或者其他关键字，比如公式R=R1+R2中，“+"就是非终结符，解析“+”的解释器就是一个非终结符表达式。

Context：环境，它的任务一般是用来存放文法中各个终结符所对应的具体值，比如R=R1+R2，给R1赋值100，给R2赋值200，这些信息需要存放到环境中。

2，when 计算器
(1)
首先输入一个加减或乘除的运算公式，比如a+b-c+a或a*b/c*a，再给每个参数赋值，最后根据公式完成运算并得到结果。

(2)主要有下面这些成员

Context 保存变量和值
Expression 抽象解释器,声明解释接口
VariableExpression 变量解释器,解释变量值
OperatorExpression 操作符解释器
AddExpression/SubExpression/MulExpression/DivExpression 加减乘除解释器
Calculator 计算器,接收表达式,计算值

(3) a+b-c+a 解析过程
解析加法 a+b-c   +   a   此时发现左边是一个减法表达式
解析减法 a+b    -   c    此时发现左边是一个加法表达式
解析加法 a  +   b        解析完这个表达式的值，递归回去得到整个表达式的值
